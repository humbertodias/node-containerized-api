version: '3.8'

services:
  # Nest.js Application
  app:
    build:
      context: .
      dockerfile: dockerfile.dev
    ports:
      - "3000:3000"
    depends_on:
      - mysql
      # - mongodb
      # - kafka
    environment:
      MYSQL_HOST: "mysql"
      MYSQL_PORT: 3306
      MYSQL_USER: "your_mysql_user"
      MYSQL_PASSWORD: "your_mysql_password"
      MYSQL_DATABASE: "your_mysql_database"
      MONGO_URL: "mongodb://mongodb:27017/your_mongo_database"
      KAFKA_BROKER: "kafka:9092"
      # Add other environment variables if needed
    volumes:
      - .:/app

  # MySQL Service
  mysql:
    image: mysql:latest
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: your_mysql_root_password
      MYSQL_USER: your_mysql_user
      MYSQL_PASSWORD: your_mysql_password
      MYSQL_DATABASE: your_mysql_database
    volumes:
      - mysql_data:/var/lib/mysql

  # # MongoDB Service
  # mongodb:
  #   image: mongo:latest
  #   ports:
  #     - "27017:27017"
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: your_mongo_username
  #     MONGO_INITDB_ROOT_PASSWORD: your_mongo_password
  #     MONGO_INITDB_DATABASE: your_mongo_database
  #   volumes:
  #     - mongodb_data:/data/db

  # # Kafka Service
  # kafka:
  #   image: wurstmeister/kafka:latest
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
  #     KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9092
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #   volumes:
  #     - kafka_data:/var/lib/kafka/data

  # # Zookeeper Service (Required by Kafka)
  # zookeeper:
  #   image: wurstmeister/zookeeper:latest
  #   ports:
  #     - "2181:2181"
  #   environment:
  #     ZOOKEEPER_DATA_DIR: /var/lib/zookeeper/data
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #   volumes:
  #     - zookeeper_data:/var/lib/zookeeper/data

volumes:
  mysql_data:
  # mongodb_data:
  # kafka_data:
  # zookeeper_data:
